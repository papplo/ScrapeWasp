app ScrapeWasp {
  wasp: {
    version: "^0.9.0"
  },
  title: "ScrapeWasp",
  dependencies: [
    ("dracula-ui", "1.0.3" ),
    ("node-html-parser", "6.1.5")
  ]
}

route RootRoute { path: "/", to: MainPage }
page MainPage {
  component: import Main from "@client/MainPage.jsx"
}

/* Tasks */
query getTasks {
  fn: import { getTasks } from "@server/queries.js",
  entities: [Task]
}

action createTask {
  fn: import { createTask } from "@server/operations.js",
  entities: [Task]
}

action updateTask {
  fn: import { updateTask } from "@server/operations.js",
  entities: [Task]
}

action performTask {
  fn: import { performTask } from "@server/operations.js",
  entities: [Task]
}

/* Task Types */
query getTypes {
  fn: import { getTypes } from "@server/queries.js",
  entities: [TaskType]
}

/* Scemas */

entity User {=psl
  id  Int               @id @default(autoincrement())
  userName String       @unique
  email String          @unique
  password String
  tasks Task[]
psl=}

entity Task {=psl
  id Int                @id @default(autoincrement())
  description String
  completed Boolean     @default(false)
  user User?            @relation(fields: [userId], references: [id])
    userId Int?
  type TaskType?        @relation(fields: [typeId], references: [id])
    typeId Int?
psl=}

entity TaskType {=psl
  id Int                @id @default(autoincrement())
  name String
  tasks Task[]
  configuration Configuration[]
psl=}

entity  Configuration {=psl
  id Int                @id @default(autoincrement())
  name String
  value String
  type TaskType? @relation(fields: [typeId], references: [id])
  typeId Int?
psl=}


